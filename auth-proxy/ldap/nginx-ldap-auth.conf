# 请根据实际情况，修改此配置示例中“your-domain.com”、“your-domain-cert”、“datasight-111111111”（datasight域名）部分
# 强烈建议您为自定义域名开启https，并强制http跳转到https，以提升浏览器请求安全性、减少浏览器请求排队等待。

# LDAP 请求缓存，缓存时间内会直接复用之前登录成功的 LDAP 请求响应
proxy_cache_path cache/  keys_zone=auth_cache:10m;

# 如不希望强制跳转到https协议，可注释此server配置
server {
    listen 80;
    server_name your-domain.com;
    return 301 https://$host$request_uri;
}

server {
    # 如希望通过http协议访问，可去掉下行注释
    # listen       80;
    listen       443 ssl http2;
    server_name your-domain.com;
    ssl_certificate your-domain-cert.pem;
    ssl_certificate_key your-domain-cert.key;

    # Protected application 受保护的应用（DataSight）
    location ~ ^\/(?!api\/user|login)(.*) {
        auth_request /auth-proxy;

        # redirect 401 to login form 未登录则401到登录页
        error_page 401 =200 /login;

        # 设置 DataSight 需要的 header
        auth_request_set $user $upstream_http_x_datasight_user;
        proxy_set_header X-DATASIGHT-USER $user;
        auth_request_set $role $upstream_http_x_datasight_role;
        proxy_set_header X-DATASIGHT-ROLE $role;

        # 登录成功，再转发到 DataSight
        if ( $http_referer ~* ^https?\:\/\/[^\/]+(\/.*)$ ) {
            set $referer_path $1;
        }

        proxy_cache off;
        proxy_buffering off;
        chunked_transfer_encoding on;
        proxy_pass https://datasight-111111111.internal.clsconsole.tencent-cloud.com;
        proxy_set_header Host $proxy_host;
        proxy_set_header Origin https://$proxy_host;
        proxy_set_header Referer https://$proxy_host$referer_path;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Proxy true;
        proxy_set_header X-Proxy-Host $host;
        proxy_set_header X-Proxy-Real-IP $remote_addr;
        proxy_set_header X-Proxy-Forwarded-Proto $scheme;
        proxy_redirect ~^(.*)/login\?s_url=https?%3A%2F%2F[a-z0-9\-]+(.internal)?.clsconsole.tencent-cloud.com%2F(.*)$ $1/login?s_url=http%3A%2F%2Fyour-domain.com%2F$3;
    }

    # DataSight 查询登录用户接口，用于页面登出能力
    location = /api/user {
        auth_request /auth-proxy;

        # redirect 401 to default user response 未登录则返回默认user相应
        error_page 401 =200 /user-api-not-login;

        # 设置 DataSight 需要的 header
        auth_request_set $user $upstream_http_x_datasight_user;
        proxy_set_header X-DATASIGHT-USER $user;
        auth_request_set $role $upstream_http_x_datasight_role;
        proxy_set_header X-DATASIGHT-ROLE $role;

        # 登录成功，再转发到 DataSight
        if ( $http_referer ~* ^https?\:\/\/[^\/]+(\/.*)$ ) {
            set $referer_path $1;
        }

        proxy_cache off;
        proxy_buffering off;
        chunked_transfer_encoding on;
        proxy_pass https://datasight-111111111.internal.clsconsole.tencent-cloud.com;
        proxy_set_header Host $proxy_host;
        proxy_set_header Origin https://$proxy_host;
        proxy_set_header Referer https://$proxy_host$referer_path;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Proxy true;
        proxy_set_header X-Proxy-Host $host;
        proxy_set_header X-Proxy-Real-IP $remote_addr;
        proxy_set_header X-Proxy-Forwarded-Proto $scheme;
    }
    location = /user-api-not-login {
        internal;
        return 200 '{"isLoggedIn":false,"domain":""}';
    }

    # 登录页，转发到 nginx-ldap-login
    location /login {
        proxy_pass http://127.0.0.1:9000/login;
        # Login service returns a redirect to the original URI
        # and sets the cookie for the ldap-auth daemon
        proxy_set_header X-Target $request_uri;
    }

    # 登录校验请求
    location = /auth-proxy {
        internal;

        # The ldap-auth daemon listens on port 8888, as set
        # in nginx-ldap-auth.py.
        # Change the IP address if the daemon is not running on
        # the same host as NGINX/NGINX Plus.
        proxy_pass http://127.0.0.1:8888;

        proxy_pass_request_body off;
        proxy_pass_request_headers off;
        proxy_set_header Content-Length "";
        # LDAP请求缓存
        proxy_cache auth_cache;
        proxy_cache_valid 200 10m;
        # The following directive adds the cookie to the cache key
        proxy_cache_key "$http_authorization$cookie_nginxauth";

        # As implemented in nginx-ldap-auth.py, the ldap-auth daemon
        # communicates with a LDAP server, passing in the following
        # parameters to specify which user account to authenticate. To
        # eliminate the need to modify the Python code, this file contains
        # 'proxy_set_header' directives that set the values of the
        # parameters. Set or change them as instructed in the comments.
        # 为了方便操作，您可以通过以下 nginx 配置设置 LDAP 相关配置项。
        # 您也可以通过修改 nginx-ldap-auth.py 代码配置相关配置项。
        #
        #    Parameter                           Proxy header
        #    -----------                         ----------------
        #    url                                 X-Ldap-URL
        #    starttls                            X-Ldap-Starttls
        #    basedn                              X-Ldap-BaseDN
        #    binddn                              X-Ldap-BindDN
        #    bindpasswd                          X-Ldap-BindPass
        #    cookiename                          X-CookieName
        #    realm                               X-Ldap-Realm
        #    template                            X-Ldap-Template
        #    memberof                            X-Ldap-Member-Of
        #    group_search_filter                 X-Ldap-Group-Search-Filter
        #    group_search_basedn                 X-Ldap-Group-Search-BaseDN
        #    group_search_filter_user_attribute  X-Ldap-Group-Search-Filter-User-Attribute
        #    group_mappings                      X-Ldap-Group-Mappings

        # (Required) Set the URL and port for connecting to the LDAP server,
        # by replacing 'example.com'.
        # Do not mix ldaps-style URL and X-Ldap-Starttls as it will not work.
        # (必填) LDAP服务器URL
        proxy_set_header X-Ldap-URL      "ldap://example.com";

        # (Optional) Establish a TLS-enabled LDAP session after binding to the
        # LDAP server.
        # This is the 'proper' way to establish encrypted TLS connections, see
        # http://www.openldap.org/faq/data/cache/185.html
        # (选填) LDAP请求启动TLS
        #proxy_set_header X-Ldap-Starttls "true";

        # (Required) Set the Base DN, by replacing the value enclosed in
        # double quotes.
        # (必填) LDAP Base DN
        proxy_set_header X-Ldap-BaseDN   "cn=Users,dc=test,dc=local";

        # (Required) Set the Bind DN, by replacing the value enclosed in
        # double quotes.
        # (必填) LDAP Bind DN
        proxy_set_header X-Ldap-BindDN   "cn=root,dc=test,dc=local";

        # (Required) Set the Bind password, by replacing 'secret'.
        # (必填) LDAP Bind password
        proxy_set_header X-Ldap-BindPass "secret";

        # (Required) The following directives set the cookie name and pass
        # it, respectively. They are required for cookie-based
        # authentication. Comment them out if using HTTP basic
        # authentication.
        # (必填) LDAP登录页所使用的cookie信息，建议保持默认不修改
        proxy_set_header X-CookieName "nginxauth";
        proxy_set_header Cookie nginxauth=$cookie_nginxauth;

        # (Optional) Uncomment if using HTTP basic authentication
        # (选填) 如果使用 http basic auth 方式登录，可去掉此行注释。如无特殊情况，建议保持默认不修改
        #proxy_set_header Authorization $http_authorization;

        # (Required if using Microsoft Active Directory as the LDAP server)
        # Set the LDAP template by uncommenting the following directive.
        # 如果使用 Microsoft Active Directory，则需要去掉此行注释，设置 LDAP 搜索语句
        #proxy_set_header X-Ldap-Template "(sAMAccountName=%(username)s)";

        # (May be required if using Microsoft Active Directory and
        # getting "In order to perform this operation a successful bind
        # must be completed on the connection." errror)
        #proxy_set_header X-Ldap-DisableReferrals "true";

        # (Optional if using OpenLDAP as the LDAP server) Set the LDAP
        # template by uncommenting the following directive and replacing
        # '(cn=%(username)s)' which is the default set in
        # nginx-ldap-auth.py.
        # 如果使用 OpenLDAP 并需要修改 LDAP 搜索语句，可去掉此行注释修改
        #proxy_set_header X-Ldap-Template "(cn=%(username)s)";

        # (Optional) Set the realm name, by uncommenting the following
        # directive and replacing 'Restricted' which is the default set
        # in nginx-ldap-auth-daemon.py.
        #proxy_set_header X-Ldap-Realm    "Restricted";

        ## (Optional) memberOf attribute name, to retrieve the groups of which the user is a member (only set if memberOf attribute is available)
        # 如果可通过用户的 memberOf 属性获得用户组的 dn，去掉此行注释
        #proxy_set_header X-Ldap-Member-Of "memberOf";
        ## (Optional) Group search filter, to retrieve the groups of which the user is a member (only set if memberOf attribute is not available)
        # 如果不能通过 memberOf 属性获得用户组的 dn，则需要此行配置，设置用户组的 LDAP 查询语句
        proxy_set_header X-Ldap-Group-Search-Filter "(&(objectClass=posixGroup)(memberUid=%s))";
        ## (Optional) Base DN to search through for groups. Use X-Ldap-BaseDN if not provided. (only set if X-Ldap-Group-Search-Filter attribute has been set)
        # 如果设置了 X-Ldap-Group-Search-Filter，并希望另外指定用户组的Base DN，可去掉此行注释。默认使用 X-Ldap-BaseDN
        #proxy_set_header X-Ldap-Group-Search-BaseDN "cn=Users,dc=test,dc=local";
        ## (Optional) the %s in the search filter will be replaced with the attribute defined below. (only set if X-Ldap-Group-Search-Filter attribute has been set)
        # 如果设置了 X-Ldap-Group-Search-Filter，则需要此行配置，指定用户的其中一个属性值，用于填入 X-Ldap-Group-Search-Filter 的 %s 中
        proxy_set_header X-Ldap-Group-Search-Filter-User-Attribute "uid";

        ## (Required) Map group_dn to DataSight role ('[[group_dn1, role1], [group_dn2, role2]')
        ## The first group mapping that an user is matched to will be used.
        ## group_dn can be "*" to match all groups or no groups.
        # (必填) 设置 group_dn 与 DataSight 角色的映射关系 ('[[group_dn1, role1], [group_dn2, role2]')
        proxy_set_header X-Ldap-Group-Mappings '[["*","readonly"]]';
    }
}
